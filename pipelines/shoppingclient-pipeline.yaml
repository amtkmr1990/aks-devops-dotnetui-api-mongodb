# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
    branches:
      include:
      - main
    paths:
      include:
      - Shopping/Shopping.Client/*
      - aks/shoppingclient.yaml

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  
  imageRepository: 'shoppingclient'
  #containerRegistry: 'shoppingacr.azurecr.io'
  dockerfilePath: 'Shopping/Shopping.Client/Dockerfile'
  tag: '$(Build.BuildId)'
  #imagePullSecret: 'shoppingacr20662ab5-auth' # Not needed if using managed identity ADO service connection 

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'sc-registryacme-dev'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Shopping.Client/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)/Shopping'
        tags: '$(tag)'
          
    - upload: aks
      artifact: aks

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build

#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: $(vmImageName)
#     environment: 'Dev'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: KubernetesManifest@0
#             displayName: Create imagePullSecret
#             inputs:
#               action: createSecret
#               secretName: $(imagePullSecret)
#               dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
#           - task: KubernetesManifest@0
#             displayName: Deploy to Kubernetes cluster
#             inputs:
#               action: deploy
#               manifests: |
#                 $(Pipeline.Workspace)/aks/shoppingclient.yaml
#               imagePullSecrets: |
#                 $(imagePullSecret)
#               containers: |
#                 $(containerRegistry)/$(imageRepository):$(tag)

